# Generated by Django 4.1.5 on 2023-01-30 06:19

import cloudinary.models
from django.conf import settings
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=252, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=252, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=252, null=True)),
                ('purchase_price', models.FloatField(null=True)),
                ('deposit', models.FloatField(null=True)),
                ('market_value', models.FloatField(null=True)),
                ('bond_value', models.IntegerField(null=True)),
                ('purchase_date', models.DateField(auto_now_add=True, null=True)),
                ('notes', models.TextField(max_length=1260, null=True)),
                ('InflationRates', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, null=True, size=None)),
                ('CapitalGrowthRates', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, null=True, size=None)),
                ('MonthlyExpenses', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), default=list, null=True, size=None)),
                ('OwnRenovations', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), default=list, null=True, size=None)),
                ('LoanRenovations', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(null=True), size=None)),
                ('RepairsAndMaintainance', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, null=True, size=None)),
                ('Specialexpenses', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, null=True, size=None)),
                ('AdditionalLoanPayments', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, null=True, size=None)),
                ('Capitalincome', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, null=True, size=None)),
                ('property_value_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('loan_amount_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('equity_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('gross_rental_income_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('loan_interest_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('loan_principle_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('total_loan_payment_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('additional_loan_payment_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('renovations_own_list', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), default=list, size=None)),
                ('renovations_loan_list', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), default=list, size=None)),
                ('repairs_and_maintenance_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('special_expenses_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('property_expenses_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('total_property_expenses_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('capital_received_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('pre_tax_cashflow_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('initial_capital_outflow_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('pre_tax_cashoncash_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('total_taxable_deductions_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('depreciation_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('taxable_amaount_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('tax_credit_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('after_tax_cashflow_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('after_tax_cashoncash_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('income_per_month_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('irr_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('City', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='investment.city')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=252, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaxOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxationcapacity', models.CharField(choices=[('Personal', 'Personal'), ('close corporation', 'close corporation'), ('private company', 'private company'), ('trust', 'trust')], default='Interest & capital', max_length=50, null=True)),
                ('method', models.CharField(choices=[('0%', '0%'), ('Marginal', 'Marginal'), ('Use Tax Table', 'Use Tax Table'), ('Custom', 'Custom')], default='Interest & capital', max_length=50, null=True)),
                ('taxrate', models.FloatField(null=True, verbose_name='Tax Rate(%)')),
                ('annualtaxableincome', models.FloatField(verbose_name='Annual Taxableincome(%)')),
                ('rate', models.IntegerField(null=True)),
                ('maximumtaxrate', models.IntegerField(verbose_name='Maximum Tax Rate (%)')),
                ('income_rate', models.JSONField(null=True)),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='investment.property')),
            ],
        ),
        migrations.CreateModel(
            name='RentalIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rentalincreasetype', models.CharField(choices=[('capital', 'capital'), ('inflation', 'inflation'), ('percent', 'percent')], default='capital', max_length=50, null=True, verbose_name='Type')),
                ('increasepercentage', models.IntegerField(verbose_name='Increase Percentage (%)')),
                ('averagerentalincomepermonth', models.FloatField(null=True, verbose_name='Average Rental Income Per Month')),
                ('amount', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='investment.property')),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='property_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='investment.propertytype'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prof_pic', cloudinary.models.CloudinaryField(default='http://res.cloudinary.com/dim8pysls/image/upload/v1639001486/x3mgnqmbi73lten4ewzv.png', max_length=255, verbose_name='images')),
                ('bio', models.TextField(blank=True, default='please update your bio', max_length=255)),
                ('f_name', models.CharField(blank=True, max_length=255)),
                ('l_name', models.CharField(blank=True, max_length=50)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OtherCosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_costs', models.CharField(choices=[('Property Taxes', 'Property Taxes'), ('Repairs & Utilities', 'Repairs & Utilities'), ('Mortgage Insurance', 'Mortgage Insurance')], max_length=255, null=True)),
                ('amount', models.IntegerField(null=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='investment.property')),
            ],
        ),
        migrations.CreateModel(
            name='ManagementExpenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vacancyrate', models.IntegerField(default=0, null=True, verbose_name='Vacancy Rate (%)')),
                ('managementfee', models.IntegerField(default=0, null=True, verbose_name='Management Fee (%)')),
                ('managementfeeperyear', models.IntegerField(verbose_name='Management Fee per Year ')),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='investment.property')),
            ],
        ),
        migrations.CreateModel(
            name='InterestRates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('averageinterestrate', models.FloatField(default=10, null=True, verbose_name='Average Interest Rate (%)')),
                ('type', models.CharField(choices=[('Interest & capital', 'Interest & capital'), ('Interest Only', 'Interest Only')], default='Interest & capital', max_length=50, null=True)),
                ('term', models.IntegerField(null=True)),
                ('rates', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='investment.property')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(default='http://res.cloudinary.com/dim8pysls/image/upload/v1639001486/x3mgnqmbi73lten4ewzv.png', max_length=255, verbose_name='images')),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='investment.property')),
            ],
        ),
        migrations.CreateModel(
            name='Depreciation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, null=True)),
                ('type', models.CharField(choices=[('Straight', 'Straight'), ('Diminishing', 'Diminishing')], default='Straight', max_length=50, null=True)),
                ('value', models.FloatField(null=True)),
                ('rate', models.IntegerField(default=8, null=True, verbose_name='Rate (%)')),
                ('years', models.IntegerField(null=True)),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='investment.property')),
            ],
        ),
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, null=True)),
                ('rate', models.IntegerField(default=0, null=True, verbose_name='Rate (%)')),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='investment.property')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='investment.country'),
        ),
    ]
